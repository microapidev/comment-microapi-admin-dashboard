{"version":3,"sources":["components/dashboard/Admins.js","hooks/useAdminProvider/index.js","components/dashboard/Applications.js","hooks/useApplicationProvider/index.js","components/dashboard/Organizations.js","hooks/useOrganizationProvider/index.js","components/dashboard/Dashboard.js","services/auth-provider.js","utils/data/admin-data.js","utils/endpoints/admin-endpoints.js","utils/data/organizations-data.js","utils/data/application-data.js","utils/endpoints/application-endpoints.js","utils/data/plans-data.js","utils/endpoints/plans-endpoints.js","utils/endpoints/index.js","utils/endpoints/settings-endpoints.js","utils/endpoints/organizations-endpoints.js","utils/data/profile-data.js","services/data-provider.js","services/index.js","utils/pagination.js","components/msadmins/AdminList.js","components/msadmins/AdminEdit.js","components/msadmins/AdminCreate.js","components/msadmins/AdminShow.js","components/msadmins/index.js","components/organizations/OrganizationList.js","components/organizations/OrganizationShow.js","components/organizations/index.js","components/applications/ApplicationList.js","components/applications/ApplicationShow.js","components/applications/index.js","components/plans/PlanCreate.js","components/plans/PlanList.js","components/plans/PlanShow.js","components/plans/index.js","components/settings/SettingShow.js","components/settings/index.js","components/profile/ProfileEdit.js","components/profile/index.js","components/profile/ProfileShow.js","components/profile/ProfileMenu.js","components/layout/CustomLayout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","textDecoration","Admins","props","classes","useState","adminCount","setAdminCount","dataProvider","useDataProvider","useEffect","getList","then","data","total","useAdminProvider","adminsCount","Card","variant","to","className","Box","display","justifyContent","p","color","textAlign","Typography","mx","Applications","applicationCount","setApplicationCount","useApplicationProvider","Organizations","organizationCount","setOrganizationCount","useOrganizationProvider","Dashboard","CardHeader","title","Grid","container","spacing","item","xs","sm","md","login","a","username","password","request","Request","method","body","JSON","stringify","email","headers","fetch","res","status","Error","statusText","json","Authorization","systemToken","console","log","localStorage","setItem","logout","removeItem","Promise","resolve","checkError","error","reject","checkAuth","getItem","getPermissions","records","Array","isArray","map","id","msAdminId","apiUrl","mapOrganizationIdToId","organization","organizationId","getOrganizationsData","target","mappedData","filter","mapApplicationIdToId","application","applicationId","orgId","_id","getApplicationsData","mapPlanIdToId","plan","planId","getPlansData","type","resource","params","GET_LIST","url","getData","GET_ONE","GET_MANY","GET_MANY_REFERENCE","UPDATE","options","CREATE","DELETE","adminEndpoints","settingsEndpoints","organizationsEndpoints","DELETE_MANY","urls","ids","applicationEndpoints","plansEndpoints","handleProfileData","profile","parse","fullname","role","getUserProfile","setUserProfile","httpClient","Headers","Accept","set","fetchUtils","fetchJson","authProvider","query","pagination","page","perPage","limit","sort","order","getPaginateQuery","endpoint","endpoints","pageInfo","totalRecord","length","getOne","getMany","getManyReference","targetId","update","updateMany","create","delete","deleteMany","result","all","push","AdminListActions","basePath","TopToolbar","CreateButton","ExportButton","record","AdminList","isSmall","useMediaQuery","theme","breakpoints","down","List","label","actions","SimpleList","linkType","primaryText","secondaryText","tertiaryText","Datagrid","rowClick","isRowSelectable","TextField","source","EmailField","CustomToolbar","Toolbar","SaveButton","AdminEdit","Edit","SimpleForm","toolbar","TextInput","disabled","AdminCreate","location","search","Create","redirect","validate","required","PasswordInput","AdminShowActions","EditButton","DeleteButton","list","edit","show","Show","SimpleShowLayout","icon","UserIcon","OrganizationPagination","Pagination","rowsPerPageOptions","OrganizationList","organizationName","OrganizationShowActions","TabbedShowLayout","Tab","ReferenceManyField","link","reference","applicationName","OrganizationIcon","ApplicationPagination","ApplicationShowActions","ReferenceField","AppsIcon","PlanCreate","BooleanInput","NumberInput","SelectInput","choices","name","PlanListActions","PlanList","planName","PlanShowActions","PlanShow","BooleanField","valueLabelTrue","valueLabelFalse","PlanIcon","SettingShow","SettingIcon","staticContext","warnWhenUnsavedChanges","ProfileMenu","forwardRef","ref","onClick","MenuItemLink","leftIcon","CustomUserMenu","connect","state","profileState","admin","resources","crudGetOne","UserMenu","CustomAppBar","AppBar","userMenu","CustomLayout","Layout","appBar","App","Admin","dashboard","layout","customRoutes","key","path","component","services","Resource","msadmins","organizations","applications","plans","settings","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7dd1a1fe.chunk.js","sourcesContent":["import React from \"react\";\nimport { Box, Card, Typography } from \"@material-ui/core\";\nimport AdminsIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport useAdminProvider from \"../../hooks/useAdminProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textDecoration: \"none\",\n  },\n});\n\nconst Admins = (props) => {\n  const classes = useStyles();\n  const [adminsCount] = useAdminProvider();\n\n  return (\n    <Card variant=\"outlined\">\n      <Link to=\"/Admins\" className={classes.root}>\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\n          <AdminsIcon color=\"action\"></AdminsIcon>\n          <Box textAlign=\"right\">\n            <Typography color=\"textPrimary\">Admins</Typography>\n            <Box mx={2}></Box>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n              {adminsCount}\n            </Typography>\n          </Box>\n        </Box>\n      </Link>\n    </Card>\n  );\n};\n\nexport default Admins;\n","import { useState, useEffect } from \"react\";\nimport { useDataProvider } from \"react-admin\";\n\nexport default () => {\n  const [adminCount, setAdminCount] = useState(0);\n  const dataProvider = useDataProvider();\n\n  useEffect(() => {\n    dataProvider\n      .getList(\"Admins\")\n      .then((data) => setAdminCount(data ? data.total : 0));\n  }, [adminCount, dataProvider]);\n\n  return [adminCount];\n};\n","import React from \"react\";\nimport { Box, Card, Typography } from \"@material-ui/core\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport { Link } from \"react-router-dom\";\nimport useApplicationProvider from \"../../hooks/useApplicationProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textDecoration: \"none\",\n  },\n});\n\nconst Applications = (props) => {\n  const classes = useStyles();\n  const [applicationCount] = useApplicationProvider();\n\n  return (\n    <Card variant=\"outlined\">\n      <Link to=\"/Applications\" className={classes.root}>\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\n          <AppsIcon color=\"action\"></AppsIcon>\n          <Box textAlign=\"right\">\n            <Typography color=\"textPrimary\">Applications</Typography>\n            <Box mx={2}></Box>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n              {applicationCount}\n            </Typography>\n          </Box>\n        </Box>\n      </Link>\n    </Card>\n  );\n};\n\nexport default Applications;\n","import { useState, useEffect } from \"react\";\nimport { useDataProvider } from \"react-admin\";\n\nexport default () => {\n  const [applicationCount, setApplicationCount] = useState(0);\n  const dataProvider = useDataProvider();\n\n  useEffect(() => {\n    dataProvider\n      .getList(\"Applications\")\n      .then((data) => setApplicationCount(data ? data.total : 0));\n  }, [applicationCount, dataProvider]);\n\n  return [applicationCount];\n};\n","import React from \"react\";\nimport { Box, Card, Typography } from \"@material-ui/core\";\nimport OrganizationIcon from \"@material-ui/icons/Business\";\nimport { Link } from \"react-router-dom\";\nimport useOrganizationProvider from \"../../hooks/useOrganizationProvider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    textDecoration: \"none\",\n  },\n});\n\nconst Organizations = (props) => {\n  const classes = useStyles();\n  const [organizationCount] = useOrganizationProvider();\n\n  return (\n    <Card variant=\"outlined\">\n      <Link to=\"/Organizations\" className={classes.root}>\n        <Box display=\"flex\" justifyContent=\"space-between\" p={2}>\n          <OrganizationIcon color=\"action\"></OrganizationIcon>\n          <Box textAlign=\"right\">\n            <Typography color=\"textPrimary\">Organizations</Typography>\n            <Box mx={2}></Box>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n              {organizationCount}\n            </Typography>\n          </Box>\n        </Box>\n      </Link>\n    </Card>\n  );\n};\n\nexport default Organizations;\n","import { useState, useEffect } from \"react\";\nimport { useDataProvider } from \"react-admin\";\n\nexport default () => {\n  const [organizationCount, setOrganizationCount] = useState(0);\n  const dataProvider = useDataProvider();\n\n  useEffect(() => {\n    dataProvider\n      .getList(\"Organizations\")\n      .then((data) => setOrganizationCount(data ? data.total : 0));\n  }, [organizationCount, dataProvider]);\n\n  return [organizationCount];\n};\n","import React from \"react\";\nimport { Card, CardHeader, Grid, Box } from \"@material-ui/core\";\nimport Admins from \"./Admins\";\nimport Applications from \"./Applications\";\nimport Organizations from \"./Organizations\";\n\nconst Dashboard = () => (\n  <Card>\n    <CardHeader title=\"Welcome to Admin Dashboard\" />\n    <Box p={2}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} sm={6} md={4}>\n          <Admins />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Applications />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Organizations />\n        </Grid>\n      </Grid>\n    </Box>\n  </Card>\n);\n\nexport default Dashboard;\n","const loginUrl =\n  \"https://comments-microservice.herokuapp.com/v1/msadmins/login\";\nconst profileUrl = \"https://comments-microservice.herokuapp.com/v1/msadmins/me\";\n\nexport default {\n  login: async ({ username, password }) => {\n    const request = new Request(loginUrl, {\n      method: \"POST\",\n      body: JSON.stringify({ email: username, password }),\n      headers: { \"Content-Type\": \"application/json\" },\n    });\n    return fetch(request)\n      .then((res) => {\n        if (res.status < 200 || res.status >= 300) {\n          throw new Error(res.statusText);\n        }\n        return res.json();\n      })\n      .then(({ data }) => {\n        fetch(\n          new Request(profileUrl, {\n            headers: { Authorization: `Bearer ${data.systemToken}` },\n          })\n        )\n          .then((res) => res.json())\n          .then((json) => {\n            console.log(\"PROFILE\", JSON.stringify(json.data));\n            localStorage.setItem(\"profile\", JSON.stringify(json.data));\n          });\n        localStorage.setItem(\"systemToken\", data.systemToken);\n      });\n  },\n  logout: () => {\n    localStorage.removeItem(\"systemToken\");\n    return Promise.resolve();\n  },\n  checkError: (error) => {\n    if (error && (error.status === 401 || error.status === 403)) {\n      localStorage.removeItem(\"systemToken\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  checkAuth: () => {\n    return localStorage.getItem(\"systemToken\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  getPermissions: () => Promise.resolve(),\n};\n","export default (data) => {\n  if (data.records && Array.isArray(data.records)) {\n    return data.records.map((item) => ({ id: item.msAdminId, ...item }));\n  } else if (data.msAdminId) {\n    return { id: data.msAdminId, ...data };\n  }\n  return data;\n};\n","import getData from \"../../utils/data/admin-data\";\nimport {\n  GET_LIST,\n  GET_ONE,\n  CREATE,\n  UPDATE,\n  DELETE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n} from \"react-admin\";\n\nconst apiUrl = \"https://comments-microservice.herokuapp.com/v1\";\n\nexport default (type, params) => {\n  switch (type) {\n    case GET_LIST:\n      return {\n        url: `${apiUrl}/msadmins`,\n        getData: getData,\n      };\n    case GET_ONE:\n      return {\n        url: `${apiUrl}/msadmins/${params.id}`,\n        getData: getData,\n      };\n    case GET_MANY:\n      return {\n        url: `${apiUrl}/msadmins`,\n        getData: getData,\n      };\n    case GET_MANY_REFERENCE:\n      return {\n        url: `${apiUrl}/msadmins`,\n        getData: getData,\n      };\n    case UPDATE:\n      return {\n        url: `${apiUrl}/msadmins`,\n        options: {\n          method: \"PATCH\",\n          body: JSON.stringify(params.data),\n        },\n        getData: getData,\n      };\n    case CREATE:\n      return {\n        url: `${apiUrl}/msadmins/create`,\n        options: {\n          method: \"POST\",\n          body: JSON.stringify(params.data),\n        },\n        getData: getData,\n      };\n    case DELETE:\n      return {\n        url: `${apiUrl}/msadmins/${params.id}`,\n        options: { method: \"DELETE\" },\n        getData: getData,\n      };\n    default:\n      throw new Error(`Unsupported Admin Data Provider request type ${type}`);\n  }\n};\n","const getOrganizationsData = (data, target, id) => {\n  let mappedData = data;\n\n  if (Array.isArray(data.records) && data.records[0].organizationId) {\n    mappedData = data.records.map(mapOrganizationIdToId);\n  }\n\n  if (target && id) {\n    mappedData = mappedData.filter((item) => item[target] === id);\n  }\n\n  return mappedData;\n};\n\nconst mapOrganizationIdToId = (organization) => {\n  return { id: organization.organizationId, ...organization };\n};\n\nexport default getOrganizationsData;\n","const getApplicationsData = (data, target, id) => {\n  let mappedData = data;\n\n  if (Array.isArray(data.records) && data.records[0].applicationId) {\n    mappedData = data.records.map(mapApplicationIdToId);\n\n    if (target && id) {\n      mappedData = mappedData.filter((item) => {\n        return item[target]._id === id;\n      });\n    }\n  }\n\n  return mappedData;\n};\n\nconst mapApplicationIdToId = (application) => {\n  if (application.organizationId) {\n    return {\n      id: application.applicationId,\n      orgId: application.organizationId._id,\n      ...application,\n    };\n  }\n  return {\n    id: application.applicationId,\n    ...application,\n  };\n};\n\nexport default getApplicationsData;\n","import getData from \"../../utils/data/application-data\";\nimport {\n  GET_ONE,\n  GET_LIST,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  DELETE,\n  DELETE_MANY,\n} from \"react-admin\";\n\nconst apiUrl = \"https://comments-microservice.herokuapp.com/v1\";\n\nexport default (type, params) => {\n  switch (type) {\n    case GET_MANY:\n    case GET_LIST:\n      return {\n        url: `${apiUrl}/msadmins/applications`,\n        getData: getData,\n      };\n    case GET_MANY_REFERENCE:\n      return {\n        url: `${apiUrl}/msadmins/applications`,\n        getData: (data) => {\n          return getData(data, params.target, params.id);\n        },\n      };\n    case GET_ONE:\n    case DELETE:\n      return {\n        url: `${apiUrl}/msadmins/applications/${params.id}`,\n        getData: getData,\n      };\n    case DELETE_MANY:\n      return {\n        urls: params.ids.map((id) => `${apiUrl}/msadmins/applications/${id}`),\n        getData: getData,\n      };\n    default:\n      throw new Error(\n        `Unsupported Application Data Provider request type ${type}`\n      );\n  }\n};\n","const getPlansData = (data, target, id) => {\n  let mappedData = data;\n\n  if (Array.isArray(data) && data[0].planId) {\n    mappedData = data.map(mapPlanIdToId);\n  } else if (data.planId) {\n    mappedData = mapPlanIdToId(data);\n  }\n\n  if (target && id) {\n    mappedData = mappedData.filter((item) => item[target] === id);\n  }\n\n  return mappedData;\n};\n\nconst mapPlanIdToId = (plan) => {\n  return { id: plan.planId, ...plan };\n};\n\nexport default getPlansData;\n","import getData from \"../../utils/data/plans-data\";\nimport {\n  GET_ONE,\n  GET_LIST,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  DELETE,\n  DELETE_MANY,\n} from \"react-admin\";\n\nconst apiUrl = \"https://comments-microservice.herokuapp.com/v1\";\n\nexport default (type, params) => {\n  switch (type) {\n    case GET_MANY:\n    case GET_LIST:\n      return {\n        url: `${apiUrl}/msadmins/plans`,\n        getData: getData,\n      };\n    case GET_MANY_REFERENCE:\n      return {\n        url: `${apiUrl}/msadmins/plans`,\n        getData: (data) => {\n          return getData(data, params.target, params.id);\n        },\n      };\n    case CREATE:\n      return {\n        url: `${apiUrl}/msadmins/plans`,\n        options: {\n          body: JSON.stringify(params.data),\n        },\n        getData: getData,\n      };\n    case GET_ONE:\n    case DELETE:\n      return {\n        url: `${apiUrl}/msadmins/plans/${params.id}`,\n        getData: getData,\n      };\n    case DELETE_MANY:\n      return {\n        urls: params.ids.map((id) => `${apiUrl}/msadmins/plans/${id}`),\n        getData: getData,\n      };\n    default:\n      throw new Error(\n        `Unsupported Application Data Provider request type ${type}`\n      );\n  }\n};\n","import adminEndpoints from \"./admin-endpoints\";\nimport settingsEndpoints from \"./settings-endpoints\";\nimport organizationsEndpoints from \"./organizations-endpoints\";\nimport applicationEndpoints from \"./application-endpoints\";\nimport plansEndpoints from \"./plans-endpoints\";\n\nexport default (type, resource, params) => {\n  switch (resource) {\n    case \"Admins\":\n      return adminEndpoints(type, params);\n    case \"Settings\":\n      return settingsEndpoints(type, params);\n    case \"Organizations\":\n      return organizationsEndpoints(type, params);\n    case \"Applications\":\n      return applicationEndpoints(type, params);\n    case \"Plans\":\n      return plansEndpoints(type, params);\n    default:\n      return \"\";\n  }\n};\n","import { GET_ONE, UPDATE } from \"react-admin\";\nconst apiUrl = \"https://comments-microservice.herokuapp.com/v1\";\n\nexport default (type, params) => {\n  switch (type) {\n    case GET_ONE:\n      return {\n        url: `${apiUrl}/msadmins/settings`,\n        getData: (data) => data,\n      };\n    case UPDATE:\n      return {\n        url: `${apiUrl}/msadmins/settings`,\n        options: {\n          method: \"PATCH\",\n          body: JSON.stringify(params.data),\n        },\n        getData: (data) => data,\n      };\n    default:\n      throw new Error(`Unsupported Admin Data Provider request type ${type}`);\n  }\n};\n","import getData from \"../../utils/data/organizations-data\";\nimport {\n  GET_ONE,\n  GET_LIST,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  DELETE,\n} from \"react-admin\";\n\nconst apiUrl = \"https://comments-microservice.herokuapp.com/v1\";\n\nexport default (type, params) => {\n  switch (type) {\n    case GET_MANY:\n    case GET_LIST:\n      return {\n        url: `${apiUrl}/msadmins/organizations`,\n        getData: getData,\n      };\n    case GET_MANY_REFERENCE:\n      return {\n        url: `${apiUrl}/msadmins/organizations`,\n        getData: (data) => {\n          return getData(data, params.target, params.id);\n        },\n      };\n    case GET_ONE:\n    case DELETE:\n      return {\n        url: `${apiUrl}/msadmins/organizations/${params.id}`,\n        getData: getData,\n      };\n    default:\n      throw new Error(\n        `Unsupported Application Data Provider request type ${type}`\n      );\n  }\n};\n","import { GET_ONE, UPDATE } from \"react-admin\";\n\nconst getUserProfile = (params) => {\n  const profile = localStorage.getItem(\"profile\");\n  if (profile) {\n    return Promise.resolve({\n      data: { id: params.id, ...JSON.parse(profile) },\n    });\n  }\n  return Promise.resolve({\n    data: { id: params.id, fullname: \"Dummy\", email: \"\", role: \"admin\" },\n  });\n};\n\nconst setUserProfile = (params) => {\n  console.log(\"SET_PROFILE\", params);\n  return Promise.reject();\n};\n\nconst handleProfileData = (type, params) => {\n  switch (type) {\n    case GET_ONE:\n      return getUserProfile(params);\n    case UPDATE:\n      return setUserProfile(params);\n    default:\n      throw new Error(`Unsupported Profile Data Provider request type ${type}`);\n  }\n};\n\nexport default handleProfileData;\n","import { fetchUtils } from \"react-admin\";\nimport endpoints from \"../utils/endpoints\";\nimport { stringify } from \"querystring\";\nimport getPaginateQuery from \"../utils/pagination\";\nimport handleProfileData from \"../utils/data/profile-data\";\nimport {\n  GET_LIST,\n  GET_ONE,\n  GET_MANY,\n  GET_MANY_REFERENCE,\n  CREATE,\n  UPDATE,\n  DELETE,\n  DELETE_MANY,\n} from \"react-admin\";\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) {\n    options.headers = new Headers({ Accept: \"application/json\" });\n  }\n  const systemToken = localStorage.getItem(\"systemToken\");\n  options.headers.set(\"Authorization\", `Bearer ${systemToken}`);\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default {\n  getList: (resource, params) => {\n    const query = getPaginateQuery(params);\n    const endpoint = endpoints(GET_LIST, resource, params);\n    return httpClient(`${endpoint.url}?${stringify(query)}`).then(\n      ({ json }) => ({\n        data: endpoint.getData(json.data),\n        total: json.data.pageInfo\n          ? json.data.pageInfo.totalRecord\n          : json.data.length,\n      })\n    );\n  },\n\n  getOne: (resource, params) => {\n    if (resource === \"profile\") {\n      return handleProfileData(GET_ONE, params);\n    }\n    const endpoint = endpoints(GET_ONE, resource, params);\n    return httpClient(endpoint.url).then(({ json }) => ({\n      data: endpoint.getData(json.data),\n    }));\n  },\n\n  getMany: (resource, params) => {\n    const endpoint = endpoints(GET_MANY, resource, params);\n    return httpClient(endpoint.url).then(({ json }) => ({\n      data: endpoint.getData(json.data),\n    }));\n  },\n\n  getManyReference: (resource, params) => {\n    const endpoint = endpoints(GET_MANY_REFERENCE, resource, params);\n    return httpClient(endpoint.url).then(({ json }) => ({\n      data: endpoint.getData(json.data, endpoint.target, endpoint.targetId),\n      total: json.data.pageInfo\n        ? json.data.pageInfo.totalRecord\n        : json.data.length,\n    }));\n  },\n\n  update: (resource, params) => {\n    const endpoint = endpoints(UPDATE, resource, params);\n    return httpClient(endpoint.url, {\n      method: \"PATCH\",\n      body: JSON.stringify(params.data),\n    }).then(({ json }) => ({\n      data: endpoint.getData(json.data),\n    }));\n  },\n\n  updateMany: () => Promise.reject(),\n\n  create: (resource, params) => {\n    const endpoint = endpoints(CREATE, resource, params);\n    return httpClient(endpoint.url, {\n      method: \"POST\",\n      body: JSON.stringify(params.data),\n    }).then(({ json }) => ({\n      data: endpoint.getData(json.data),\n    }));\n  },\n\n  delete: (resource, params) => {\n    const endpoint = endpoints(DELETE, resource, params);\n    return httpClient(endpoint.url, {\n      method: \"DELETE\",\n    }).then(({ json }) => ({\n      data: endpoint.getData(json.data),\n    }));\n  },\n\n  deleteMany: (resource, params) => {\n    const endpoint = endpoints(DELETE_MANY, resource, params);\n    let result = [];\n    return Promise.all(\n      endpoint.urls.map((url) =>\n        httpClient(url, {\n          method: \"DELETE\",\n        }).then(({ json }) => result.push(endpoint.getData(json.data)))\n      )\n    ).then(() => ({ data: result }));\n  },\n};\n","import authProvider from \"./auth-provider\";\nimport dataProvider from \"./data-provider\";\n\nexport default {\n  authProvider: authProvider,\n  dataProvider: dataProvider,\n};\n","export default (params) => {\n  const { page, perPage } =\n    params && params.pagination ? params.pagination : { page: 1, perPage: 10 };\n  const { order } = params && params.sort ? params.sort : { order: \"DESC\" };\n  return {\n    limit: perPage,\n    sort: order,\n    page: page,\n  };\n};\n","import React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EmailField,\n  SimpleList,\n  TopToolbar,\n  ExportButton,\n  CreateButton,\n} from \"react-admin\";\n\nconst AdminListActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <CreateButton basePath={basePath} />\n    <ExportButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst AdminList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  return (\n    <List\n      label=\"Admins\"\n      title=\"Admins\"\n      actions={<AdminListActions />}\n      {...props}\n    >\n      {isSmall ? (\n        <SimpleList\n          linkType=\"show\"\n          primaryText={(record) => record.fullname}\n          secondaryText={(record) => record.email}\n          tertiaryText={(record) => record.role}\n        />\n      ) : (\n        <Datagrid rowClick=\"show\" isRowSelectable={(record) => false}>\n          <TextField label=\"Name\" source=\"fullname\" />\n          <TextField label=\"ID\" source=\"id\" />\n          <EmailField source=\"email\" />\n          <TextField source=\"role\" />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default AdminList;\n","import React from \"react\";\nimport { Edit, SimpleForm, TextInput, SaveButton, Toolbar } from \"react-admin\";\n\nconst CustomToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst AdminEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm toolbar={<CustomToolbar />}>\n      <TextInput disabled source=\"id\" />\n      <TextInput label=\"Full Name\" source=\"fullname\" />\n      <TextInput disabled source=\"email\" />\n      <TextInput disabled source=\"role\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport default AdminEdit;\n","import React from \"react\";\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  PasswordInput,\n  required,\n} from \"react-admin\";\nimport { parse } from \"querystring\";\n\nconst AdminCreate = (props) => {\n  const data = parse(props.location.search);\n  console.log(\"AdminCreate\", data);\n  return (\n    <Create label=\"Create\" title=\"Create an Admin\" {...props}>\n      <SimpleForm redirect=\"show\">\n        <TextInput\n          label=\"Full Name\"\n          source=\"fullname\"\n          validate={[required()]}\n        />\n        <TextInput source=\"email\" validate={[required()]} />\n        <PasswordInput source=\"password\" validate={[required()]} />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default AdminCreate;\n","import React from \"react\";\nimport {\n  Show,\n  SimpleShowLayout,\n  TextField,\n  TopToolbar,\n  DeleteButton,\n  EditButton,\n} from \"react-admin\";\n\nconst AdminShowActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <EditButton basePath={basePath} record={data} />\n    <DeleteButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst AdminShow = (props) => (\n  <Show label=\"Show\" title=\"\" actions={<AdminShowActions />} {...props}>\n    <SimpleShowLayout>\n      <TextField label=\"Full Name\" source=\"fullname\" />\n      <TextField source=\"email\" />\n      <TextField source=\"password\" />\n      <TextField source=\"role\" />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport default AdminShow;\n","import AdminList from \"./AdminList\";\nimport AdminEdit from \"./AdminEdit\";\nimport AdminCreate from \"./AdminCreate\";\nimport AdminShow from \"./AdminShow\";\nimport UserIcon from \"@material-ui/icons/Group\";\n\nexport default {\n  list: AdminList,\n  edit: AdminEdit,\n  create: AdminCreate,\n  show: AdminShow,\n  icon: UserIcon,\n};\n","import React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { List, Datagrid, TextField, SimpleList, Pagination } from \"react-admin\";\n\nconst OrganizationPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50]} {...props} />\n);\n\nconst OrganizationList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  return (\n    <List\n      label=\"Organizations\"\n      title=\"Organizations\"\n      pagination={<OrganizationPagination />}\n      {...props}\n    >\n      {isSmall ? (\n        <SimpleList\n          linkType=\"show\"\n          primaryText={(record) => record.organizationName}\n          secondaryText={(record) => `${record.organizationId}`}\n        />\n      ) : (\n        <Datagrid rowClick=\"show\">\n          <TextField label=\"Name\" source=\"organizationName\" />\n          <TextField label=\"ID\" source=\"id\" />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default OrganizationList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Show,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  ReferenceManyField,\n  SimpleList,\n  TopToolbar,\n  DeleteButton,\n} from \"react-admin\";\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"#3f51b5\",\n  },\n});\n\nconst OrganizationShowActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <DeleteButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst OrganizationShow = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Show label=\"Show\" actions={<OrganizationShowActions />} {...props}>\n      <TabbedShowLayout>\n        <Tab label=\"details\">\n          <TextField label=\"Organization Name\" source=\"organizationName\" />\n          <TextField label=\"ID\" source=\"organizationId\" />\n        </Tab>\n        <Tab label=\"applications\">\n          <ReferenceManyField\n            link=\"show\"\n            label=\"\"\n            reference=\"Applications\"\n            target=\"organizationId\"\n          >\n            <SimpleList\n              className={classes.root}\n              linkType=\"show\"\n              primaryText={(record) => record.applicationName}\n            ></SimpleList>\n          </ReferenceManyField>\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nexport default OrganizationShow;\n","import OrganizationList from \"./OrganizationList\";\nimport OrganizationShow from \"./OrganizationShow\";\nimport OrganizationIcon from \"@material-ui/icons/Business\";\n\nexport default {\n  list: OrganizationList,\n  show: OrganizationShow,\n  icon: OrganizationIcon,\n};\n","import React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  SimpleList,\n  Pagination,\n  ReferenceField,\n} from \"react-admin\";\n\nconst ApplicationPagination = (props) => (\n  <Pagination rowsPerPageOptions={[10, 25, 50]} {...props} />\n);\n\nconst ApplicationList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  return (\n    <List\n      label=\"Applications\"\n      title=\"Applications\"\n      pagination={<ApplicationPagination />}\n      {...props}\n    >\n      {isSmall ? (\n        <SimpleList\n          linkType=\"show\"\n          primaryText={(record) => record.applicationName}\n          secondaryText={(record) => record.orgId}\n          tertiaryText={(record) => record.organizationName}\n        />\n      ) : (\n        <Datagrid rowClick=\"show\">\n          <TextField label=\"Name\" source=\"applicationName\" />\n          <TextField label=\"ID\" source=\"id\" />\n          <ReferenceField\n            link=\"show\"\n            label=\"Organization\"\n            source=\"orgId\"\n            reference=\"Organizations\"\n          >\n            <TextField label=\"Organization Name\" source=\"organizationName\" />\n          </ReferenceField>\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default ApplicationList;\n","import React from \"react\";\nimport {\n  Show,\n  SimpleShowLayout,\n  TextField,\n  ReferenceField,\n  TopToolbar,\n  DeleteButton,\n} from \"react-admin\";\n\nconst ApplicationShowActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <DeleteButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst ApplicationShow = (props) => (\n  <Show label=\"Show\" title=\"\" actions={<ApplicationShowActions />} {...props}>\n    <SimpleShowLayout>\n      <TextField source=\"id\" />\n      <TextField label=\"Name\" source=\"applicationName\" />\n      <TextField label=\"Organization ID\" source=\"orgId\" />\n      <ReferenceField\n        link=\"show\"\n        label=\"Organization\"\n        source=\"orgId\"\n        reference=\"Organizations\"\n      >\n        <TextField source=\"organizationName\" />\n      </ReferenceField>\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport default ApplicationShow;\n","import ApplicationList from \"./ApplicationList\";\nimport ApplicationShow from \"./ApplicationShow\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\n\nexport default {\n  list: ApplicationList,\n  show: ApplicationShow,\n  icon: AppsIcon,\n};\n","import React from \"react\";\nimport {\n  Create,\n  SimpleForm,\n  TextInput,\n  BooleanInput,\n  SelectInput,\n  NumberInput,\n  required,\n} from \"react-admin\";\n\nconst PlanCreate = (props) => {\n  return (\n    <Create label=\"Create\" title=\"Create a Plan\" {...props}>\n      <SimpleForm redirect=\"show\">\n        <TextInput label=\"Name\" source=\"name\" validate={[required()]} />\n        <BooleanInput label=\"Logging\" source=\"logging\" />\n        <NumberInput\n          label=\"Maximum Log Retention Period (Days)\"\n          source=\"maxLogRetentionPeriod\"\n        />\n        <SelectInput\n          source=\"periodWeight\"\n          validate={[required()]}\n          choices={[\n            { id: 1, name: \"Monthly\" },\n            { id: 3, name: \"Quarterly\" },\n            { id: 12, name: \"Yearly\" },\n          ]}\n        />\n        <NumberInput\n          label=\"Maximum requests per day\"\n          source=\"maxRequestPerDay\"\n        />\n        <NumberInput\n          label=\"Maximum requests per minute\"\n          source=\"maxRequestPerMin\"\n        />\n      </SimpleForm>\n    </Create>\n  );\n};\n\nexport default PlanCreate;\n","import React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  SimpleList,\n  TopToolbar,\n  CreateButton,\n  ExportButton,\n} from \"react-admin\";\n\nconst PlanListActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <CreateButton basePath={basePath} />\n    <ExportButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst PlanList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n\n  return (\n    <List\n      label=\"Plans\"\n      title=\"Plans\"\n      actions={<PlanListActions />}\n      pagination={null}\n      {...props}\n    >\n      {isSmall ? (\n        <SimpleList linkType=\"show\" primaryText={(record) => record.planName} />\n      ) : (\n        <Datagrid rowClick=\"show\">\n          <TextField label=\"Name\" source=\"planName\" />\n          <TextField label=\"ID\" source=\"id\" />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport default PlanList;\n","import React from \"react\";\nimport {\n  Show,\n  TabbedShowLayout,\n  Tab,\n  TextField,\n  BooleanField,\n  TopToolbar,\n  DeleteButton,\n} from \"react-admin\";\n\nconst PlanShowActions = ({ basePath, data, resource }) => (\n  <TopToolbar>\n    <DeleteButton basePath={basePath} record={data} resource={resource} />\n  </TopToolbar>\n);\n\nconst PlanShow = (props) => {\n  return (\n    <Show label=\"Show\" title=\"\" actions={<PlanShowActions />} {...props}>\n      <TabbedShowLayout>\n        <Tab label=\"details\">\n          <TextField label=\"Name\" source=\"planName\" />\n          <TextField label=\"ID\" source=\"id\" />\n        </Tab>\n        <Tab label=\"logging\">\n          <BooleanField\n            source=\"logging\"\n            valueLabelTrue=\"Logging has been enabled.\"\n            valueLabelFalse=\"Logging is not enabled.\"\n          />\n          <TextField\n            label=\"Maximum log retention period\"\n            source=\"maxLogRetentionPeriod\"\n          />\n          <TextField label=\"Period weight\" source=\"periodWeight\" />\n        </Tab>\n        <Tab label=\"requests\">\n          <TextField\n            label=\"Maximum requests per day\"\n            source=\"maxRequestPerDay\"\n          />\n          <TextField\n            label=\"Maximum requests per minute\"\n            source=\"maxRequestPerMin\"\n          />\n        </Tab>\n      </TabbedShowLayout>\n    </Show>\n  );\n};\n\nexport default PlanShow;\n","import PlanCreate from \"./PlanCreate\";\nimport PlanList from \"./PlanList\";\nimport PlanShow from \"./PlanShow\";\nimport PlanIcon from \"@material-ui/icons/Receipt\";\n\nexport default {\n  create: PlanCreate,\n  list: PlanList,\n  show: PlanShow,\n  icon: PlanIcon,\n};\n","import React from \"react\";\nimport { Show, SimpleShowLayout, TextField } from \"react-admin\";\n\nconst SettingShow = (props) => (\n  <Show label=\"Settings\" title=\"Settings\" {...props}>\n    <SimpleShowLayout>\n      <TextField label=\"Requests per Minute (max)\" source=\"maxRequestsPerMin\" />\n      <TextField label=\"Items per Page (default)\" source=\"maxItemsPerPage\" />\n      <TextField label=\"Items per Page (max)\" source=\"defaultItemsPerPage\" />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport default SettingShow;\n","import SettingShow from \"./SettingShow\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\n\nexport default {\n  list: SettingShow,\n  show: SettingShow,\n  icon: SettingIcon,\n};\n","import React from \"react\";\nimport {\n  Edit,\n  TextInput,\n  SimpleForm,\n  Toolbar,\n  SaveButton,\n  required,\n} from \"react-admin\";\n\nconst CustomToolbar = (props) => (\n  <Toolbar {...props}>\n    <SaveButton />\n  </Toolbar>\n);\n\nconst ProfileEdit = ({ staticContext, ...props }) => {\n  return (\n    <Edit\n      id=\"edit\"\n      resource=\"profile\"\n      basePath=\"/profile/edit\"\n      redirect=\"show\"\n      title=\"My Profile\"\n      {...props}\n    >\n      <SimpleForm\n        redirect=\"show\"\n        toolbar={<CustomToolbar />}\n        warnWhenUnsavedChanges\n      >\n        <TextInput\n          disabled\n          label=\"Full Name\"\n          source=\"fullname\"\n          validate={required()}\n        />\n        <TextInput disabled source=\"email\" />\n        <TextInput disabled source=\"role\" />\n      </SimpleForm>\n    </Edit>\n  );\n};\n\nexport default ProfileEdit;\n","import ProfileEdit from \"./ProfileEdit\";\nimport ProfileShow from \"./ProfileShow\";\n\nexport default {\n  edit: ProfileEdit,\n  show: ProfileShow,\n};\n","import React from \"react\";\nimport { Show, SimpleShowLayout, TextField } from \"react-admin\";\n\nconst ProfileShow = ({ staticContext, ...props }) => (\n  <Show\n    id=\"profile\"\n    resource=\"profile\"\n    basePath=\"/profile\"\n    title=\"My Profile\"\n    redirect=\"false\"\n    {...props}\n  >\n    <SimpleShowLayout redirect=\"false\">\n      <TextField label=\"Full Name\" source=\"fullname\" />\n      <TextField source=\"email\" />\n      <TextField source=\"role\" />\n    </SimpleShowLayout>\n  </Show>\n);\n\nexport default ProfileShow;\n","import React, { forwardRef } from \"react\";\nimport { MenuItemLink } from \"react-admin\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nconst ProfileMenu = forwardRef(({ onClick }, ref) => (\n  <MenuItemLink\n    ref={ref}\n    to=\"/profile\"\n    primaryText=\"Profile\"\n    leftIcon={<FaceIcon />}\n    onClick={onClick}\n  />\n));\n\nexport default ProfileMenu;\n","import React from \"react\";\nimport { AppBar, UserMenu, Layout, crudGetOne } from \"react-admin\";\nimport ProfileMenu from \"../profile/ProfileMenu\";\nimport { connect } from \"react-redux\";\n\nconst UserMenuView = (props) => (\n  <UserMenu {...props}>\n    <ProfileMenu />\n  </UserMenu>\n);\n\nconst mapStateToProps = (state) => {\n  const resource = \"profile\";\n  const id = \"profile\";\n  const profileState = state.admin.resources[resource];\n\n  return {\n    profile: profileState ? profileState.data[id] : null,\n  };\n};\n\nconst CustomUserMenu = connect(mapStateToProps, { crudGetOne })(UserMenuView);\n\nconst CustomAppBar = (props) => (\n  <AppBar {...props} userMenu={<CustomUserMenu />} />\n);\n\nconst CustomLayout = (props) => <Layout {...props} appBar={CustomAppBar} />;\n\nexport default CustomLayout;\n","import React from \"react\";\nimport { Admin, Resource } from \"react-admin\";\nimport { Route } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport services from \"./services\";\nimport msadmins from \"./components/msadmins\";\nimport organizations from \"./components/organizations\";\nimport applications from \"./components/applications\";\nimport plans from \"./components/plans\";\nimport settings from \"./components/settings\";\nimport profile from \"./components/profile\";\nimport CustomLayout from \"./components/layout/CustomLayout\";\n\nfunction App() {\n  return (\n    <Admin\n      dashboard={Dashboard}\n      layout={CustomLayout}\n      customRoutes={[\n        <Route key=\"profile\" path=\"/profile\" component={profile.show} />,\n      ]}\n      {...services}\n    >\n      <Resource name=\"Admins\" {...msadmins} />\n      <Resource name=\"Organizations\" {...organizations} />\n      <Resource name=\"Applications\" {...applications} />\n      <Resource name=\"Plans\" {...plans} />\n      <Resource name=\"Settings\" {...settings} />\n      <Resource name=\"profile\" />\n    </Admin>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}